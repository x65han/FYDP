{"version":3,"sources":["components/Message.js","components/Progress.js","components/FileUpload.js","App.js","index.js"],"names":["Message","_ref","msg","react_default","a","createElement","className","role","type","data-dismiss","aria-label","aria-hidden","Progress","percentage","style","width","concat","FileUpload","_useState","useState","_useState2","Object","slicedToArray","file","setFile","_useState3","_useState4","filename","setFilename","_useState5","_useState6","uploadedFile","setUploadedFile","_useState7","_useState8","message","setMessage","_useState9","_useState10","uploadPercentage","setUploadPercentage","onSubmit","asyncToGenerator","regenerator_default","mark","_callee","e","formData","res","_res$data","fileName","filePath","wrap","_context","prev","next","preventDefault","FormData","append","axios","post","headers","Content-Type","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","setTimeout","sent","data","t0","response","status","stop","_x","apply","this","arguments","react","components_Message","id","onChange","target","files","name","htmlFor","components_Progress","value","src","alt","App","components_FileUpload","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"6NAuBeA,EApBC,SAAAC,GAAa,IAAVC,EAAUD,EAAVC,IACjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CAA+CC,KAAK,SAChEL,EACDC,EAAAC,EAAAC,cAAA,UACEG,KAAK,SACLF,UAAU,QACVG,eAAa,QACbC,aAAW,SAEXP,EAAAC,EAAAC,cAAA,QAAMM,cAAY,QAAlB,WCQOC,EAlBE,SAAAX,GAAoB,IAAjBY,EAAiBZ,EAAjBY,WAClB,OACEV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,+CACVC,KAAK,cACLO,MAAO,CAAEC,MAAK,GAAAC,OAAKH,EAAL,OAEbA,EALH,wBCmFSI,EApFI,WAAM,IAAAC,EACCC,mBAAS,IADVC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAChBK,EADgBH,EAAA,GACVI,EADUJ,EAAA,GAAAK,EAESN,mBAAS,eAFlBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEhBE,EAFgBD,EAAA,GAENE,EAFMF,EAAA,GAAAG,EAGiBV,mBAAS,IAH1BW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGhBE,EAHgBD,EAAA,GAGFE,EAHEF,EAAA,GAAAG,EAIOd,mBAAS,IAJhBe,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAIhBE,EAJgBD,EAAA,GAIPE,EAJOF,EAAA,GAAAG,EAKyBlB,mBAAS,GALlCmB,EAAAjB,OAAAC,EAAA,EAAAD,CAAAgB,EAAA,GAKhBE,EALgBD,EAAA,GAKEE,EALFF,EAAA,GAYjBG,EAAQ,eAAAxC,EAAAoB,OAAAqB,EAAA,EAAArB,CAAAsB,EAAAvC,EAAAwC,KAAG,SAAAC,EAAMC,GAAN,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAR,EAAAvC,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACfT,EAAEU,kBACIT,EAAW,IAAIU,UACZC,OAAO,OAAQnC,GAHT8B,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAMKI,IAAMC,KAAK,UAAWb,EAAU,CAChDc,QAAS,CACPC,eAAgB,uBAElBC,iBAAkB,SAAAC,GAChBxB,EACEyB,SACEC,KAAKC,MAA8B,IAAvBH,EAAcI,OAAgBJ,EAAcK,SAK5DC,WAAW,kBAAM9B,EAAoB,IAAI,QAlBhC,OAMPQ,EANOK,EAAAkB,KAAAtB,EAsBkBD,EAAIwB,KAA3BtB,EAtBKD,EAsBLC,SAAUC,EAtBLF,EAsBKE,SAElBnB,EAAgB,CAAEkB,WAAUC,aAE5Bf,EAAW,iBA1BEiB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAoB,GAAApB,EAAA,SA4Be,MAAxBA,EAAAoB,GAAIC,SAASC,OACfvC,EAAW,uCAEXA,EAAWiB,EAAAoB,GAAIC,SAASF,KAAKtE,KA/BlB,yBAAAmD,EAAAuB,SAAA/B,EAAA,kBAAH,gBAAAgC,GAAA,OAAA5E,EAAA6E,MAAAC,KAAAC,YAAA,GAoCd,OACE7E,EAAAC,EAAAC,cAAC4E,EAAA,SAAD,KACG9C,EAAUhC,EAAAC,EAAAC,cAAC6E,EAAD,CAAShF,IAAKiC,IAAc,KACvChC,EAAAC,EAAAC,cAAA,QAAMoC,SAAUA,GACdtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLF,UAAU,oBACV6E,GAAG,aACHC,SAlDO,SAAAtC,GACftB,EAAQsB,EAAEuC,OAAOC,MAAM,IACvB1D,EAAYkB,EAAEuC,OAAOC,MAAM,GAAGC,SAkDxBpF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,oBAAoBkF,QAAQ,cAC1C7D,IAILxB,EAAAC,EAAAC,cAACoF,EAAD,CAAU5E,WAAY0B,IAEtBpC,EAAAC,EAAAC,cAAA,SACEG,KAAK,SACLkF,MAAM,SACNpF,UAAU,oCAGbyB,EACC5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAeyB,EAAamB,UAC1C/C,EAAAC,EAAAC,cAAA,OAAKS,MAAO,CAAEC,MAAO,QAAU4E,IAAK5D,EAAaoB,SAAUyC,IAAI,OAGjE,OCtEKC,SAVH,kBACV1F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,8BACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBADf,sBAIAH,EAAAC,EAAAC,cAACyF,EAAD,SCNJC,IAASC,OAAO7F,EAAAC,EAAAC,cAAC4F,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.fd65e99b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Message = ({ msg }) => {\n  return (\n    <div className='alert alert-info alert-dismissible fade show' role='alert'>\n      {msg}\n      <button\n        type='button'\n        className='close'\n        data-dismiss='alert'\n        aria-label='Close'\n      >\n        <span aria-hidden='true'>&times;</span>\n      </button>\n    </div>\n  );\n};\n\nMessage.propTypes = {\n  msg: PropTypes.string.isRequired\n};\n\nexport default Message;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Progress = ({ percentage }) => {\n  return (\n    <div className='progress'>\n      <div\n        className='progress-bar progress-bar-striped bg-success'\n        role='progressbar'\n        style={{ width: `${percentage}%` }}\n      >\n        {percentage}%\n      </div>\n    </div>\n  );\n};\n\nProgress.propTypes = {\n  percentage: PropTypes.number.isRequired\n};\n\nexport default Progress;\n","import React, { Fragment, useState } from 'react';\nimport Message from './Message';\nimport Progress from './Progress';\nimport axios from 'axios';\n\nconst FileUpload = () => {\n  const [file, setFile] = useState('');\n  const [filename, setFilename] = useState('Choose File');\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [message, setMessage] = useState('');\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n\n  const onChange = e => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const res = await axios.post('/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          setUploadPercentage(\n            parseInt(\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\n            )\n          );\n\n          // Clear percentage\n          setTimeout(() => setUploadPercentage(0), 10000);\n        }\n      });\n\n      const { fileName, filePath } = res.data;\n\n      setUploadedFile({ fileName, filePath });\n\n      setMessage('File Uploaded');\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage('There was a problem with the server');\n      } else {\n        setMessage(err.response.data.msg);\n      }\n    }\n  };\n\n  return (\n    <Fragment>\n      {message ? <Message msg={message} /> : null}\n      <form onSubmit={onSubmit}>\n        <div className='custom-file mb-4'>\n          <input\n            type='file'\n            className='custom-file-input'\n            id='customFile'\n            onChange={onChange}\n          />\n          <label className='custom-file-label' htmlFor='customFile'>\n            {filename}\n          </label>\n        </div>\n\n        <Progress percentage={uploadPercentage} />\n\n        <input\n          type='submit'\n          value='Upload'\n          className='btn btn-primary btn-block mt-4'\n        />\n      </form>\n      {uploadedFile ? (\n        <div className='row mt-5'>\n          <div className='col-md-6 m-auto'>\n            <h3 className='text-center'>{uploadedFile.fileName}</h3>\n            <img style={{ width: '100%' }} src={uploadedFile.filePath} alt='' />\n          </div>\n        </div>\n      ) : null}\n    </Fragment>\n  );\n};\n\nexport default FileUpload;\n","import React from 'react';\nimport FileUpload from './components/FileUpload';\nimport './App.css';\n\nconst App = () => (\n  <div className='container mt-4'>\n    <h4 className='display-4 text-center mb-4'>\n      <i className='fab fa-react' /> React File Upload\n    </h4>\n\n    <FileUpload />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}